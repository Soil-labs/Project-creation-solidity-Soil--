{
  "address": "0xd9C582E5451319BA957B7820614C6986187c497d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_adminsrole",
          "type": "string[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "MemberRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "role",
          "type": "string[]"
        }
      ],
      "name": "NewMemberAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Members",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "access",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "_role",
          "type": "string[]"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "_newrole",
          "type": "string[]"
        }
      ],
      "name": "changeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "desc",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "name": "getRoles",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "roles",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "name": "revokeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        }
      ],
      "name": "updateProjectDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "updateProjectName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb3e7ab9cf66b806769323439547a57aaa51a6e1d51272cc9c9a9ba7f2fc7151d",
  "receipt": {
    "to": null,
    "from": "0x625784d9186a2Bd1aF501379342483b67bf4ED30",
    "contractAddress": "0xd9C582E5451319BA957B7820614C6986187c497d",
    "transactionIndex": 22,
    "gasUsed": "1436102",
    "logsBloom": "0x
    "blockHash": "0x73e233ca94d4cd9950683c6e07fae571a549a2ec5423d1dd4ab2ca0d10b79651",
    "transactionHash": "0xb3e7ab9cf66b806769323439547a57aaa51a6e1d51272cc9c9a9ba7f2fc7151d",
    "logs": [
      {
        "transactionIndex": 22,
        "blockNumber": 7286803,
        "transactionHash": "0xb3e7ab9cf66b806769323439547a57aaa51a6e1d51272cc9c9a9ba7f2fc7151d",
        "address": "0xd9C582E5451319BA957B7820614C6986187c497d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000625784d9186a2bd1af501379342483b67bf4ed30"
        ],
        "data": "0x",
        "logIndex": 69,
        "blockHash": "0x73e233ca94d4cd9950683c6e07fae571a549a2ec5423d1dd4ab2ca0d10b79651"
      },
      {
        "transactionIndex": 22,
        "blockNumber": 7286803,
        "transactionHash": "0xb3e7ab9cf66b806769323439547a57aaa51a6e1d51272cc9c9a9ba7f2fc7151d",
        "address": "0xd9C582E5451319BA957B7820614C6986187c497d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000625784d9186a2bd1af501379342483b67bf4ed30",
          "0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"
        ],
        "data": "0x",
        "logIndex": 70,
        "blockHash": "0x73e233ca94d4cd9950683c6e07fae571a549a2ec5423d1dd4ab2ca0d10b79651"
      },
      {
        "transactionIndex": 22,
        "blockNumber": 7286803,
        "transactionHash": "0xb3e7ab9cf66b806769323439547a57aaa51a6e1d51272cc9c9a9ba7f2fc7151d",
        "address": "0xd9C582E5451319BA957B7820614C6986187c497d",
        "topics": [
          "0xd2467e481f7d87a173b743229338eb0ddb0754e69a7420e9e58c4fe254c7ab9b"
        ],
        "data": "0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c119900000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000066d656d6265720000000000000000000000000000000000000000000000000000",
        "logIndex": 71,
        "blockHash": "0x73e233ca94d4cd9950683c6e07fae571a549a2ec5423d1dd4ab2ca0d10b79651"
      }
    ],
    "blockNumber": 7286803,
    "cumulativeGasUsed": "7099190",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199",
    "Test Project",
    "Test ProjectDesc",
    [
      "member"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "ce11a30bf6ef194dba73716e23796b39",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_adminsrole\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"role\",\"type\":\"string[]\"}],\"name\":\"NewMemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Members\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"access\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_role\",\"type\":\"string[]\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_newrole\",\"type\":\"string[]\"}],\"name\":\"changeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"desc\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"getRoles\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"roles\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"revokeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"updateProjectDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateProjectName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Project.sol\":\"Project\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Project.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\"; \\r\\n\\r\\ncontract Project is Ownable {\\r\\n    uint256 public numberOfMembers;\\r\\n    string public name;\\r\\n    string public desc;\\r\\n    struct Member {\\r\\n        address member;\\r\\n        string[] role;\\r\\n        bool access;\\r\\n    }\\r\\n    mapping(address => Member) public Members;\\r\\n    event NewMemberAdded(address newMember, string[] role);\\r\\n    event MemberRevoked(address member);\\r\\n    constructor(address _owner,string memory _name, string memory _desc, string[] memory _adminsrole) {\\r\\n        transferOwnership(_owner);\\r\\n        numberOfMembers = 0;\\r\\n        Members[_owner] = Member(_owner, _adminsrole, true);\\r\\n        numberOfMembers += 1;\\r\\n        emit NewMemberAdded(_owner, _adminsrole);\\r\\n        name = _name;\\r\\n        desc = _desc;\\r\\n        \\r\\n    }\\r\\n    function addMember(address _dev, string[] memory _role) public onlyOwner {\\r\\n        require(Members[_dev].member == address(0), \\\"Member Alerady Exists\\\");\\r\\n        Members[_dev] = Member(_dev, _role, true);\\r\\n        numberOfMembers += 1;\\r\\n        emit NewMemberAdded(_dev, _role);\\r\\n    }\\r\\n\\r\\n    function revokeMember(address _dev) public onlyOwner {\\r\\n        Members[_dev].access = false;\\r\\n        numberOfMembers -= 1;\\r\\n        emit MemberRevoked(_dev);\\r\\n    }\\r\\n\\r\\n    function changeRole(address _dev, string[] memory _newrole) public onlyOwner {\\r\\n        Members[_dev].role = _newrole;\\r\\n    }\\r\\n\\r\\n    function getRoles(address _dev) public view returns(string[] memory roles) {\\r\\n        return Members[_dev].role;\\r\\n    }\\r\\n    function updateProjectName(string memory _name) public onlyOwner {\\r\\n        name = _name;\\r\\n    }\\r\\n    function updateProjectDescription(string memory _desc) public onlyOwner {\\r\\n        desc = _desc;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe60a1a2b86c04ad5fbd9a739c8cf458b088e6749bed2a3d9f64dca3952663e6e\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021be380380620021be83398181016040528101906200003791906200089e565b620000576200004b620001fe60201b60201c565b6200020660201b60201c565b6200006884620002ca60201b60201c565b600060018190555060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160011515815250600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190620001489291906200041b565b5060408201518160020160006101000a81548160ff0219169083151502179055509050506001806000828254620001809190620009a6565b925050819055507fd2467e481f7d87a173b743229338eb0ddb0754e69a7420e9e58c4fe254c7ab9b8482604051620001ba92919062000b41565b60405180910390a18260029080519060200190620001da92919062000482565b508160039080519060200190620001f392919062000482565b505050505062000cf5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620002da6200036160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200034d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003449062000bfc565b60405180910390fd5b6200035e816200020660201b60201c565b50565b62000371620001fe60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1662000397620003f260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620003f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e79062000c6e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8280548282559060005260206000209081019282156200046f579160200282015b828111156200046e5782518290805190602001906200045d92919062000482565b50916020019190600101906200043c565b5b5090506200047e919062000513565b5090565b828054620004909062000cbf565b90600052602060002090601f016020900481019282620004b4576000855562000500565b82601f10620004cf57805160ff191683800117855562000500565b8280016001018555821562000500579182015b82811115620004ff578251825591602001919060010190620004e2565b5b5090506200050f91906200053b565b5090565b5b808211156200053757600081816200052d91906200055a565b5060010162000514565b5090565b5b80821115620005565760008160009055506001016200053c565b5090565b508054620005689062000cbf565b6000825580601f106200057c57506200059d565b601f0160209004906000526020600020908101906200059c91906200053b565b5b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005e182620005b4565b9050919050565b620005f381620005d4565b8114620005ff57600080fd5b50565b6000815190506200061381620005e8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200066e8262000623565b810181811067ffffffffffffffff8211171562000690576200068f62000634565b5b80604052505050565b6000620006a5620005a0565b9050620006b3828262000663565b919050565b600067ffffffffffffffff821115620006d657620006d562000634565b5b620006e18262000623565b9050602081019050919050565b60005b838110156200070e578082015181840152602081019050620006f1565b838111156200071e576000848401525b50505050565b60006200073b6200073584620006b8565b62000699565b9050828152602081018484840111156200075a57620007596200061e565b5b62000767848285620006ee565b509392505050565b600082601f83011262000787576200078662000619565b5b81516200079984826020860162000724565b91505092915050565b600067ffffffffffffffff821115620007c057620007bf62000634565b5b602082029050602081019050919050565b600080fd5b6000620007ed620007e784620007a2565b62000699565b90508083825260208201905060208402830185811115620008135762000812620007d1565b5b835b818110156200086157805167ffffffffffffffff8111156200083c576200083b62000619565b5b8086016200084b89826200076f565b8552602085019450505060208101905062000815565b5050509392505050565b600082601f83011262000883576200088262000619565b5b815162000895848260208601620007d6565b91505092915050565b60008060008060808587031215620008bb57620008ba620005aa565b5b6000620008cb8782880162000602565b945050602085015167ffffffffffffffff811115620008ef57620008ee620005af565b5b620008fd878288016200076f565b935050604085015167ffffffffffffffff811115620009215762000920620005af565b5b6200092f878288016200076f565b925050606085015167ffffffffffffffff811115620009535762000952620005af565b5b62000961878288016200086b565b91505092959194509250565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009b3826200096d565b9150620009c0836200096d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620009f857620009f762000977565b5b828201905092915050565b62000a0e81620005d4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b600062000a698262000a40565b62000a75818562000a4b565b935062000a87818560208601620006ee565b62000a928162000623565b840191505092915050565b600062000aab838362000a5c565b905092915050565b6000602082019050919050565b600062000acd8262000a14565b62000ad9818562000a1f565b93508360208202850162000aed8562000a30565b8060005b8581101562000b2f578484038952815162000b0d858262000a9d565b945062000b1a8362000ab3565b925060208a0199505060018101905062000af1565b50829750879550505050505092915050565b600060408201905062000b58600083018562000a03565b818103602083015262000b6c818462000ac0565b90509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600062000be460268362000b75565b915062000bf18262000b86565b604082019050919050565b6000602082019050818103600083015262000c178162000bd5565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600062000c5660208362000b75565b915062000c638262000c1e565b602082019050919050565b6000602082019050818103600083015262000c898162000c47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000cd857607f821691505b6020821081141562000cef5762000cee62000c90565b5b50919050565b6114b98062000d056000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638adf23b91161008c578063c6da612811610066578063c6da6128146101c6578063ce6ccfaf146101e2578063f2fde38b14610212578063fd0f01661461022e576100cf565b80638adf23b91461016e5780638da5cb5b1461018a578063a30e3fa9146101a8576100cf565b806306fdde03146100d457806323a22bcb146100f25780632e9a288e1461010e57806355f150f11461012a5780636423d52514610148578063715018a614610164575b600080fd5b6100dc61025f565b6040516100e99190610c7e565b60405180910390f35b61010c60048036038101906101079190610de9565b6102ed565b005b61012860048036038101906101239190610f76565b61030f565b005b610132610372565b60405161013f9190610c7e565b60405180910390f35b610162600480360381019061015d9190610f76565b610400565b005b61016c610629565b005b61018860048036038101906101839190610fd2565b61063d565b005b6101926106f3565b60405161019f919061100e565b60405180910390f35b6101b061071c565b6040516101bd9190611042565b60405180910390f35b6101e060048036038101906101db9190610de9565b610722565b005b6101fc60048036038101906101f79190610fd2565b610744565b6040516102099190611169565b60405180910390f35b61022c60048036038101906102279190610fd2565b61085f565b005b61024860048036038101906102439190610fd2565b6108e3565b6040516102569291906111a6565b60405180910390f35b6002805461026c906111fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610298906111fe565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b505050505081565b6102f5610934565b806003908051906020019061030b929190610a7e565b5050565b610317610934565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061036d929190610b04565b505050565b6003805461037f906111fe565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab906111fe565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b610408610934565b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d09061127c565b60405180910390fd5b60405180606001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160011515815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906105af929190610b04565b5060408201518160020160006101000a81548160ff02191690831515021790555090505060018060008282546105e591906112cb565b925050819055507fd2467e481f7d87a173b743229338eb0ddb0754e69a7420e9e58c4fe254c7ab9b828260405161061d929190611321565b60405180910390a15050565b610631610934565b61063b60006109b2565b565b610645610934565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060018060008282546106b29190611351565b925050819055507f745cd29407db644ed93e3ceb61cbcab96d1dfb496989ac5d5bf514fc5a9fab9c816040516106e8919061100e565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b61072a610934565b8060029080519060200190610740929190610a7e565b5050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b828210156108545783829060005260206000200180546107c7906111fe565b80601f01602080910402602001604051908101604052809291908181526020018280546107f3906111fe565b80156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b5050505050815260200190600101906107a8565b505050509050919050565b610867610934565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce906113f7565b60405180910390fd5b6108e0816109b2565b50565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900460ff16905082565b61093c610a76565b73ffffffffffffffffffffffffffffffffffffffff1661095a6106f3565b73ffffffffffffffffffffffffffffffffffffffff16146109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611463565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610a8a906111fe565b90600052602060002090601f016020900481019282610aac5760008555610af3565b82601f10610ac557805160ff1916838001178555610af3565b82800160010185558215610af3579182015b82811115610af2578251825591602001919060010190610ad7565b5b509050610b009190610b64565b5090565b828054828255906000526020600020908101928215610b53579160200282015b82811115610b52578251829080519060200190610b42929190610a7e565b5091602001919060010190610b24565b5b509050610b609190610b81565b5090565b5b80821115610b7d576000816000905550600101610b65565b5090565b5b80821115610ba15760008181610b989190610ba5565b50600101610b82565b5090565b508054610bb1906111fe565b6000825580601f10610bc35750610be2565b601f016020900490600052602060002090810190610be19190610b64565b5b50565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c1f578082015181840152602081019050610c04565b83811115610c2e576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c5082610be5565b610c5a8185610bf0565b9350610c6a818560208601610c01565b610c7381610c34565b840191505092915050565b60006020820190508181036000830152610c988184610c45565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cf682610c34565b810181811067ffffffffffffffff82111715610d1557610d14610cbe565b5b80604052505050565b6000610d28610ca0565b9050610d348282610ced565b919050565b600067ffffffffffffffff821115610d5457610d53610cbe565b5b610d5d82610c34565b9050602081019050919050565b82818337600083830152505050565b6000610d8c610d8784610d39565b610d1e565b905082815260208101848484011115610da857610da7610cb9565b5b610db3848285610d6a565b509392505050565b600082601f830112610dd057610dcf610cb4565b5b8135610de0848260208601610d79565b91505092915050565b600060208284031215610dff57610dfe610caa565b5b600082013567ffffffffffffffff811115610e1d57610e1c610caf565b5b610e2984828501610dbb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5d82610e32565b9050919050565b610e6d81610e52565b8114610e7857600080fd5b50565b600081359050610e8a81610e64565b92915050565b600067ffffffffffffffff821115610eab57610eaa610cbe565b5b602082029050602081019050919050565b600080fd5b6000610ed4610ecf84610e90565b610d1e565b90508083825260208201905060208402830185811115610ef757610ef6610ebc565b5b835b81811015610f3e57803567ffffffffffffffff811115610f1c57610f1b610cb4565b5b808601610f298982610dbb565b85526020850194505050602081019050610ef9565b5050509392505050565b600082601f830112610f5d57610f5c610cb4565b5b8135610f6d848260208601610ec1565b91505092915050565b60008060408385031215610f8d57610f8c610caa565b5b6000610f9b85828601610e7b565b925050602083013567ffffffffffffffff811115610fbc57610fbb610caf565b5b610fc885828601610f48565b9150509250929050565b600060208284031215610fe857610fe7610caa565b5b6000610ff684828501610e7b565b91505092915050565b61100881610e52565b82525050565b60006020820190506110236000830184610fff565b92915050565b6000819050919050565b61103c81611029565b82525050565b60006020820190506110576000830184611033565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006110a582610be5565b6110af8185611089565b93506110bf818560208601610c01565b6110c881610c34565b840191505092915050565b60006110df838361109a565b905092915050565b6000602082019050919050565b60006110ff8261105d565b6111098185611068565b93508360208202850161111b85611079565b8060005b85811015611157578484038952815161113885826110d3565b9450611143836110e7565b925060208a0199505060018101905061111f565b50829750879550505050505092915050565b6000602082019050818103600083015261118381846110f4565b905092915050565b60008115159050919050565b6111a08161118b565b82525050565b60006040820190506111bb6000830185610fff565b6111c86020830184611197565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121657607f821691505b6020821081141561122a576112296111cf565b5b50919050565b7f4d656d62657220416c6572616479204578697374730000000000000000000000600082015250565b6000611266601583610bf0565b915061127182611230565b602082019050919050565b6000602082019050818103600083015261129581611259565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112d682611029565b91506112e183611029565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113165761131561129c565b5b828201905092915050565b60006040820190506113366000830185610fff565b818103602083015261134881846110f4565b90509392505050565b600061135c82611029565b915061136783611029565b92508282101561137a5761137961129c565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113e1602683610bf0565b91506113ec82611385565b604082019050919050565b60006020820190508181036000830152611410816113d4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061144d602083610bf0565b915061145882611417565b602082019050919050565b6000602082019050818103600083015261147c81611440565b905091905056fea264697066735822122044845f42fac77645fff1331c2a3d9391580c6c12908e15823a19bbfd92743fdb64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638adf23b91161008c578063c6da612811610066578063c6da6128146101c6578063ce6ccfaf146101e2578063f2fde38b14610212578063fd0f01661461022e576100cf565b80638adf23b91461016e5780638da5cb5b1461018a578063a30e3fa9146101a8576100cf565b806306fdde03146100d457806323a22bcb146100f25780632e9a288e1461010e57806355f150f11461012a5780636423d52514610148578063715018a614610164575b600080fd5b6100dc61025f565b6040516100e99190610c7e565b60405180910390f35b61010c60048036038101906101079190610de9565b6102ed565b005b61012860048036038101906101239190610f76565b61030f565b005b610132610372565b60405161013f9190610c7e565b60405180910390f35b610162600480360381019061015d9190610f76565b610400565b005b61016c610629565b005b61018860048036038101906101839190610fd2565b61063d565b005b6101926106f3565b60405161019f919061100e565b60405180910390f35b6101b061071c565b6040516101bd9190611042565b60405180910390f35b6101e060048036038101906101db9190610de9565b610722565b005b6101fc60048036038101906101f79190610fd2565b610744565b6040516102099190611169565b60405180910390f35b61022c60048036038101906102279190610fd2565b61085f565b005b61024860048036038101906102439190610fd2565b6108e3565b6040516102569291906111a6565b60405180910390f35b6002805461026c906111fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610298906111fe565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b505050505081565b6102f5610934565b806003908051906020019061030b929190610a7e565b5050565b610317610934565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061036d929190610b04565b505050565b6003805461037f906111fe565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab906111fe565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b505050505081565b610408610934565b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d09061127c565b60405180910390fd5b60405180606001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160011515815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906105af929190610b04565b5060408201518160020160006101000a81548160ff02191690831515021790555090505060018060008282546105e591906112cb565b925050819055507fd2467e481f7d87a173b743229338eb0ddb0754e69a7420e9e58c4fe254c7ab9b828260405161061d929190611321565b60405180910390a15050565b610631610934565b61063b60006109b2565b565b610645610934565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060018060008282546106b29190611351565b925050819055507f745cd29407db644ed93e3ceb61cbcab96d1dfb496989ac5d5bf514fc5a9fab9c816040516106e8919061100e565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b61072a610934565b8060029080519060200190610740929190610a7e565b5050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b828210156108545783829060005260206000200180546107c7906111fe565b80601f01602080910402602001604051908101604052809291908181526020018280546107f3906111fe565b80156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b5050505050815260200190600101906107a8565b505050509050919050565b610867610934565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce906113f7565b60405180910390fd5b6108e0816109b2565b50565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900460ff16905082565b61093c610a76565b73ffffffffffffffffffffffffffffffffffffffff1661095a6106f3565b73ffffffffffffffffffffffffffffffffffffffff16146109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611463565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610a8a906111fe565b90600052602060002090601f016020900481019282610aac5760008555610af3565b82601f10610ac557805160ff1916838001178555610af3565b82800160010185558215610af3579182015b82811115610af2578251825591602001919060010190610ad7565b5b509050610b009190610b64565b5090565b828054828255906000526020600020908101928215610b53579160200282015b82811115610b52578251829080519060200190610b42929190610a7e565b5091602001919060010190610b24565b5b509050610b609190610b81565b5090565b5b80821115610b7d576000816000905550600101610b65565b5090565b5b80821115610ba15760008181610b989190610ba5565b50600101610b82565b5090565b508054610bb1906111fe565b6000825580601f10610bc35750610be2565b601f016020900490600052602060002090810190610be19190610b64565b5b50565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c1f578082015181840152602081019050610c04565b83811115610c2e576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c5082610be5565b610c5a8185610bf0565b9350610c6a818560208601610c01565b610c7381610c34565b840191505092915050565b60006020820190508181036000830152610c988184610c45565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cf682610c34565b810181811067ffffffffffffffff82111715610d1557610d14610cbe565b5b80604052505050565b6000610d28610ca0565b9050610d348282610ced565b919050565b600067ffffffffffffffff821115610d5457610d53610cbe565b5b610d5d82610c34565b9050602081019050919050565b82818337600083830152505050565b6000610d8c610d8784610d39565b610d1e565b905082815260208101848484011115610da857610da7610cb9565b5b610db3848285610d6a565b509392505050565b600082601f830112610dd057610dcf610cb4565b5b8135610de0848260208601610d79565b91505092915050565b600060208284031215610dff57610dfe610caa565b5b600082013567ffffffffffffffff811115610e1d57610e1c610caf565b5b610e2984828501610dbb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5d82610e32565b9050919050565b610e6d81610e52565b8114610e7857600080fd5b50565b600081359050610e8a81610e64565b92915050565b600067ffffffffffffffff821115610eab57610eaa610cbe565b5b602082029050602081019050919050565b600080fd5b6000610ed4610ecf84610e90565b610d1e565b90508083825260208201905060208402830185811115610ef757610ef6610ebc565b5b835b81811015610f3e57803567ffffffffffffffff811115610f1c57610f1b610cb4565b5b808601610f298982610dbb565b85526020850194505050602081019050610ef9565b5050509392505050565b600082601f830112610f5d57610f5c610cb4565b5b8135610f6d848260208601610ec1565b91505092915050565b60008060408385031215610f8d57610f8c610caa565b5b6000610f9b85828601610e7b565b925050602083013567ffffffffffffffff811115610fbc57610fbb610caf565b5b610fc885828601610f48565b9150509250929050565b600060208284031215610fe857610fe7610caa565b5b6000610ff684828501610e7b565b91505092915050565b61100881610e52565b82525050565b60006020820190506110236000830184610fff565b92915050565b6000819050919050565b61103c81611029565b82525050565b60006020820190506110576000830184611033565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006110a582610be5565b6110af8185611089565b93506110bf818560208601610c01565b6110c881610c34565b840191505092915050565b60006110df838361109a565b905092915050565b6000602082019050919050565b60006110ff8261105d565b6111098185611068565b93508360208202850161111b85611079565b8060005b85811015611157578484038952815161113885826110d3565b9450611143836110e7565b925060208a0199505060018101905061111f565b50829750879550505050505092915050565b6000602082019050818103600083015261118381846110f4565b905092915050565b60008115159050919050565b6111a08161118b565b82525050565b60006040820190506111bb6000830185610fff565b6111c86020830184611197565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121657607f821691505b6020821081141561122a576112296111cf565b5b50919050565b7f4d656d62657220416c6572616479204578697374730000000000000000000000600082015250565b6000611266601583610bf0565b915061127182611230565b602082019050919050565b6000602082019050818103600083015261129581611259565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112d682611029565b91506112e183611029565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113165761131561129c565b5b828201905092915050565b60006040820190506113366000830185610fff565b818103602083015261134881846110f4565b90509392505050565b600061135c82611029565b915061136783611029565b92508282101561137a5761137961129c565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113e1602683610bf0565b91506113ec82611385565b604082019050919050565b60006020820190508181036000830152611410816113d4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061144d602083610bf0565b915061145882611417565b602082019050919050565b6000602082019050818103600083015261147c81611440565b905091905056fea264697066735822122044845f42fac77645fff1331c2a3d9391580c6c12908e15823a19bbfd92743fdb64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Project.sol:Project",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Project.sol:Project",
        "label": "numberOfMembers",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 143,
        "contract": "contracts/Project.sol:Project",
        "label": "name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 145,
        "contract": "contracts/Project.sol:Project",
        "label": "desc",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 158,
        "contract": "contracts/Project.sol:Project",
        "label": "Members",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Member)153_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Member)153_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Project.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)153_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Member)153_storage": {
        "encoding": "inplace",
        "label": "struct Project.Member",
        "members": [
          {
            "astId": 147,
            "contract": "contracts/Project.sol:Project",
            "label": "member",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 150,
            "contract": "contracts/Project.sol:Project",
            "label": "role",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 152,
            "contract": "contracts/Project.sol:Project",
            "label": "access",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}